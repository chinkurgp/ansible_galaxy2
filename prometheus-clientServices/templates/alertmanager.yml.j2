global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'localhost:25'
  smtp_from: 'alertmanager@example.org'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'

# The directory from which notification templates are read.
templates:
- '{{ config_directory }}/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'cluster', 'service']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h

  # A default receiver
  receiver: merlin-clientservices-slack

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.


receivers:
- name: 'merlin-clientservices-slack'
  slack_configs:
  - api_url: "https://hooks.slack.com/services/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"
    channel: "{{ clientservices_slack_channel }}"
    send_resolved: true
    color: {% raw %}'{{ if eq .Status "firing" }}warning{{ else }}good{{ end }}'{% endraw %}

    title_link: http://{{inventory_hostname}}:9093/#/alerts
    text: {% raw %}"\n*Summary*: {{ (index .Alerts 0).Annotations.summary }}\n*Description*: {{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}*Runbook*: {{ (index .Alerts 0).Annotations.runbook }}\n"{% endraw %}

